topojson=(function(){function h(q,o){var j={},p={},n={};o.forEach(function(k){var r=l(k);(j[r[0]]||(j[r[0]]=[])).push(k);(j[r[1]]||(j[r[1]]=[])).push(~k)});o.forEach(function(t){var w=l(t),x=w[0],r=w[1],v,u;if(v=n[x]){delete n[v.end];v.push(t);v.end=r;if(u=p[r]){delete p[u.start];var k=u===v?v:v.concat(u);p[k.start=v.start]=n[k.end=u.end]=k}else{if(u=n[r]){delete p[u.start];delete n[u.end];var k=v.concat(u.map(function(y){return ~y}).reverse());p[k.start=v.start]=n[k.end=u.start]=k}else{p[v.start]=n[v.end]=v}}}else{if(v=p[r]){delete p[v.start];v.unshift(t);v.start=x;if(u=n[x]){delete n[u.end];var s=u===v?v:u.concat(v);p[s.start=u.start]=n[s.end=v.end]=s}else{if(u=p[x]){delete p[u.start];delete n[u.end];var s=u.map(function(y){return ~y}).reverse().concat(v);p[s.start=u.end]=n[s.end=v.end]=s}else{p[v.start]=n[v.end]=v}}}else{if(v=p[x]){delete p[v.start];v.unshift(~t);v.start=r;if(u=n[r]){delete n[u.end];var s=u===v?v:u.concat(v);p[s.start=u.start]=n[s.end=v.end]=s}else{if(u=p[r]){delete p[u.start];delete n[u.end];var s=u.map(function(y){return ~y}).reverse().concat(v);p[s.start=u.end]=n[s.end=v.end]=s}else{p[v.start]=n[v.end]=v}}}else{if(v=n[r]){delete n[v.end];v.push(~t);v.end=x;if(u=n[x]){delete p[u.start];var k=u===v?v:v.concat(u);p[k.start=v.start]=n[k.end=u.end]=k}else{if(u=p[x]){delete p[u.start];delete n[u.end];var k=v.concat(u.map(function(y){return ~y}).reverse());p[k.start=v.start]=n[k.end=u.start]=k}else{p[v.start]=n[v.end]=v}}}else{v=[t];p[v.start=x]=n[v.end=r]=v}}}}});function l(r){var k=q.arcs[r],t=k[0],s=[0,0];k.forEach(function(u){s[0]+=u[0],s[1]+=u[1]});return[t,s]}var i=[];for(var m in n){i.push(n[m])}return i}function g(w,m,k){var j=[];if(arguments.length>1){var r=[],t;function l(n){if(n<0){n=~n}(r[n]||(r[n]=[])).push(t)}function x(i){i.forEach(l)}function u(i){i.forEach(x)}function s(i){if(i.type==="GeometryCollection"){i.geometries.forEach(s)}else{if(i.type in v){t=i;v[i.type](i.arcs)}}}var v={LineString:x,MultiLineString:u,Polygon:u,MultiPolygon:function(i){i.forEach(u)}};s(m);r.forEach(arguments.length<3?function(o,n){j.push(n)}:function(o,n){if(k(o[0],o[o.length-1])){j.push(n)}})}else{for(var q=0,p=w.arcs.length;q<p;++q){j.push(q)}}return c(w,{type:"MultiLineString",arcs:h(w,j)})}function a(j,i){return i.type==="GeometryCollection"?{type:"FeatureCollection",features:i.geometries.map(function(k){return e(j,k)})}:e(j,i)}function e(k,j){var i={type:"Feature",id:j.id,properties:j.properties||{},geometry:c(k,j)};if(j.id==null){delete i.id}return i}function c(u,k){var l=u.transform,p=l.scale[0],n=l.scale[1],x=l.translate[0],v=l.translate[1],i=u.arcs;function j(B,C){if(C.length){C.pop()}for(var z=i[B<0?~B:B],A=0,F=z.length,o=0,E=0,D;A<F;++A){C.push([(o+=(D=z[A])[0])*p+x,(E+=D[1])*n+v])}if(B<0){b(C,F)}}function s(o){return[o[0]*p+x,o[1]*n+v]}function w(z){var y=[];for(var o=0,A=z.length;o<A;++o){j(z[o],y)}if(y.length<2){y.push(y[0])}return y}function m(y){var o=w(y);while(o.length<4){o.push(o[0])}return o}function r(o){return o.map(m)}function q(z){var y=z.type;return y==="GeometryCollection"?{type:y,geometries:z.geometries.map(q)}:y in t?{type:y,coordinates:t[y](z)}:null}var t={Point:function(y){return s(y.coordinates)},MultiPoint:function(y){return y.coordinates.map(s)},LineString:function(y){return w(y.arcs)},MultiLineString:function(y){return y.arcs.map(w)},Polygon:function(y){return r(y.arcs)},MultiPolygon:function(y){return y.arcs.map(r)}};return q(k)}function b(p,o){var m,k=p.length,l=k-o;while(l<--k){m=p[l],p[l++]=p[k],p[k]=m}}function f(j,i){var m=0,l=j.length;while(m<l){var k=m+l>>>1;if(j[k]<i){m=k+1}else{l=k}}return m}function d(m){var o=[],l=m.map(function(){return[]});function j(q,p){q.forEach(function(r){if(r<0){r=~r}var s=o[r]||(o[r]=[]);if(!s[p]){s.forEach(function(u){var v,t;t=f(v=l[p],u);if(v[t]!==u){v.splice(t,0,u)}t=f(v=l[u],p);if(v[t]!==p){v.splice(t,0,p)}}),s[p]=p}})}function k(q,p){q.forEach(function(r){j(r,p)})}function n(q,p){if(q.type==="GeometryCollection"){q.geometries.forEach(function(r){n(r,p)})}else{if(q.type in i){i[q.type](q.arcs,p)}}}var i={LineString:j,MultiLineString:k,Polygon:k,MultiPolygon:function(q,p){q.forEach(function(r){k(r,p)})}};m.forEach(n);return l}return{version:"1.1.3",mesh:g,feature:a,neighbors:d}})();